@page "{handler?}"
@model IndexModel
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Home";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    //Get start and end date of the user, for determining the min and max of the calendar input
    DateTime startTime = DateTime.Parse(HttpContext.Session.GetString("_StartDate"));
    DateTime endTime = DateTime.Parse(HttpContext.Session.GetString("_EndDate"));

    string startDate = startTime.ToString("yyyy-MM");
    string endDate = endTime.ToString("yyyy-MM");
}


<form method="post">
    <div class="TimeCard">
        <div class="container outer">
            <div class="row">
                <p>Dato: </p>
                <div class="DatePicker">
                    <input id="Calendar" value="@Model.CalendarValue" type="month" name="Calendar" class="form-control" min="@startDate" max="@endDate" required />
                    <button type="submit" asp-page-handler="Load" class="submitBTN">
                        <i class="fas fa-check"></i> Submit
                    </button>
                </div>


                @*one month back | Now | one month front*@
                <button type="submit" asp-page-handler="Back">
                    <i style="font-size: 25px;" class="fas fa-chevron-circle-left"></i>
                </button>
                <button type="submit" asp-page-handler="Now">
                    <i style="font-size: 25px;" class="fas fa-play-circle"></i>
                </button>
                <button type="submit" asp-page-handler="Forward">
                    <i style="font-size: 25px;" class="fas fa-chevron-circle-right"></i>
                </button>


            </div>
            <div class="Table-Head">
                <table>
                    <thead>
                        <tr>
                            <th class="DayTh" scope="col">Day</th>
                            <th class="DatoTh" scope="col">Dato</th>
                            <th class="FraværTh" scope="col">Fravær</th>
                            <th class="LoginTh" scope="col">Login</th>
                            <th class="LogudTh" scope="col">Logud</th>
                            <th class="SaldoTh" scope="col">Saldo</th>
                            <th class="TotSaldoTh" scope="col">Saldo+</th>
                        </tr>
                    </thead>
                </table>
            </div>

            <div class="Table-Gride">
                <table class="table">
                    <tbody>
                        @{
                            bool trigger = false;

                            string strClass = "";

                            //If list of days, day match the date of days date show date i guss
                            foreach (DateTime day in Model.Days)
                            {
                                if (day.ToString("yyyy/MM/dd") == DateTime.Now.ToString("yyyy/MM/dd"))
                                {
                                    strClass = "ToDayClass";
                                }

                                if (Model.daysList.Count != 0)
                                {
                                    //Foreach day in day list
                                    foreach (Model.Items.Days date in Model.daysList)
                                    {
                                        //If day is equal to day from days lists
                                        if (date.Date.ToString("yyyy/MM/dd") == day.ToString("yyyy/MM/dd"))
                                        {
                                            if (date.StartDay.ToString("HH:mm") == "00:00" && date.AbscenseID != 1)
                                            {
                                                Model.Items.AbscenseType abs = Model.AbscenseText.Find(x => x.ID == date.AbscenseID);

                                                <tr>
                                                    <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                                    <td class="@strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                                    <td class="@strClass Fraværtr">@abs.Type</td>
                                                    <td class="@strClass Logintr">@date.StartDay.ToString("HH:mm")</td>
                                                    <td class="@strClass Logudtr">@date.EndDay.ToString("HH:mm")</td>
                                                    <td class="@strClass Saldotr">@date.Saldo</td>
                                                    <td class="@strClass TotSaldotr">@date.TotalSaldo</td>
                                                </tr>

                                                strClass = "";
                                                trigger = true;
                                            }
                                            else if (date.StartDay.ToString("HH:mm") == "00:00")
                                            {
                                                <tr>
                                                    <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                                    <td class="@strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                                    <td class="@strClass Fraværtr"></td>
                                                    <td class="@strClass Logintr"></td>
                                                    <td class="@strClass Logudtr"></td>
                                                    <td class="@strClass Saldotr"></td>
                                                    <td class="@strClass TotSaldotr"></td>
                                                </tr>

                                                strClass = "";
                                                trigger = true;
                                            }
                                            //If date enday is equal too 00:00 load without end day
                                            else if (date.EndDay.ToString("HH:mm") == "00:00" && date.AbscenseID != 1)
                                            {
                                                Model.Items.AbscenseType abs = Model.AbscenseText.Find(x => x.ID == date.AbscenseID);

                                                <tr>
                                                    <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                                    <td class="@strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                                    <td class="@strClass Fraværtr">@abs.Type</td>
                                                    <td class="@strClass Logintr">@date.StartDay.ToString("HH:mm")</td>
                                                    <td class="@strClass Logudtr">@date.EndDay.ToString("HH:mm")</td>
                                                    <td class="@strClass Saldotr">@date.Saldo</td>
                                                    <td class="@strClass TotSaldotr">@date.TotalSaldo</td>
                                                </tr>

                                                strClass = "";
                                                trigger = true;
                                            }
                                            else if (date.EndDay.ToString("HH:mm") == "00:00")
                                            {
                                                <tr>
                                                    <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                                    <td class="@strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                                    <td class="@strClass Fraværtr"></td>
                                                    <td class="@strClass Logintr">@date.StartDay.ToString("HH:mm")</td>
                                                    <td class="@strClass Logudtr"></td>
                                                    <td class="@strClass Saldotr">-7:24 </td>
                                                    <td class="@strClass TotSaldotr">@date.TotalSaldo</td>
                                                </tr>

                                                strClass = "";
                                                trigger = true;
                                            }
                                            else
                                            {
                                                <tr>
                                                    <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                                    <td class="@strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                                    <td class="@strClass Fraværtr"></td>
                                                    <td class="@strClass Logintr">@date.StartDay.ToString("HH:mm")</td>
                                                    <td class="@strClass Logudtr">@date.EndDay.ToString("HH:mm")</td>
                                                    <td class="@strClass Saldotr">@date.Saldo</td>
                                                    <td class="@strClass TotSaldotr">@date.TotalSaldo</td>
                                                </tr>

                                                strClass = "";

                                                trigger = true;
                                            }
                                        }
                                    }

                                    //Need if too get rid of repets
                                    if (trigger == true)
                                    {
                                        trigger = false;
                                    }
                                    else if (day.ToString("dddd") == "lørdag" || day.ToString("dddd") == "søndag")
                                    {
                                        <tr>
                                            <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                            <td class="WeekdEnd @strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                            <td class="WeekdEnd @strClass Fraværtr"></td>
                                            <td class="WeekdEnd @strClass Logintr"></td>
                                            <td class="WeekdEnd @strClass Logudtr"></td>
                                            <td class="WeekdEnd @strClass Saldotr"></td>
                                            <td class="WeekdEnd @strClass TotSaldotr"></td>
                                        </tr>

                                        strClass = "";
                                    }
                                    else
                                    {
                                        <tr>
                                            <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                            <td class="@strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                            <td class="@strClass Fraværtr"></td>
                                            <td class="@strClass Logintr"></td>
                                            <td class="@strClass Logudtr"></td>
                                            <td class="@strClass Saldotr"></td>
                                            <td class="@strClass TotSaldotr"></td>
                                        </tr>

                                        strClass = "";
                                    }

                                }
                                else if (day.ToString("dddd") == "lørdag" || day.ToString("dddd") == "søndag")
                                {
                                    <tr>
                                        <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                        <td class="WeekdEnd @strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                        <td class="WeekdEnd @strClass Fraværtr"></td>
                                        <td class="WeekdEnd @strClass Logintr"></td>
                                        <td class="WeekdEnd @strClass Logudtr"></td>
                                        <td class="WeekdEnd @strClass Saldotr"></td>
                                        <td class="WeekdEnd @strClass TotSaldotr"></td>
                                    </tr>

                                    strClass = "";
                                }
                                else
                                {
                                    <tr>
                                        <th scope="row" class="Dayth">@day.ToString("dddd")  </th>
                                        <td class="@strClass Datetr">@day.ToString("yyyy-MM-dd")</td>
                                        <td class="@strClass Fraværtr"></td>
                                        <td class="@strClass Logintr"></td>
                                        <td class="@strClass Logudtr"></td>
                                        <td class="@strClass Saldotr"></td>
                                        <td class="@strClass TotSaldotr"></td>
                                    </tr>

                                    strClass = "";
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="AbscenseRequest" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Fraværsanmodning</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row col-row">
                        <div class="col-6 Abscense">
                            <select class="form-control AbscenseTypeDrop" asp-for="AbsenceType" name="AbsenceType" id="AbscenseDrop">
                                @{
                                    foreach (Model.Items.AbscenseType type in Model.Abscenses)
                                    {
                                        <option value="@type.ID">@type.Type</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row col-row TextRow">
                        <div class="col-6 TextCol">
                            <textarea type="text" class="form-control AbsenceText" name="AbscText" placeholder="* Valgfrit Fraværes oversag" asp-for="AbscText"></textarea>
                        </div>
                    </div>
                    <div class="row col-row Date" id="Date">
                        <div class="col-6 Calendar">
                            <input id="AbsCalendar" value="@DateTime.Now.ToString("yyyy/MM/dd")" type="date" name="AbsCal" class="form-control" min="@DateTime.Now.ToString("yyyy/MM/dd")" oninvalid="this.setCustomValidity('Vælge en dato')" oninput="this.setCustomValidity('')" required />
                        </div>
                        <div class="col-2 Hour">
                            <input class="HourClock" value="@DateTime.Now.ToString("HH:mm")" min="08:00" max="15:24" type="time" name="Hour" required>
                        </div>
                    </div>
                    <div class="TwoDates" id="TwoDatesDiv">
                        <div class="row col-row Date">
                            <div class="col-6">
                                <input id="AbsCalendarTwo" value="@DateTime.Now.ToString("yyyy/MM/dd")" type="date" name="AbsCalTwo" class="form-control" min="@DateTime.Now.ToString("yyyy/MM/dd")" oninvalid="this.setCustomValidity('Skriv start dato her')" oninput="this.setCustomValidity('')" />
                            </div>
                            <div class="col-6">
                                <input id="AbsCalendarThree" value="@DateTime.Now.ToString("yyyy/MM/dd")" type="date" name="AbsCalThree" class="form-control" min="@DateTime.Now.ToString("yyyy/MM/dd")" oninvalid="this.setCustomValidity('Skriv end dato her')" oninput="this.setCustomValidity('')" />
                            </div>
                        </div>
                        <div class="row col-row Clock">
                            <div class="col-6 TwoDate">
                                <input class="HourClockTwo" id="HourTwo" value="@DateTime.Now.ToString("HH:mm")" min="08:00" max="15:24" type="time" name="HourTwo">
                            </div>
                            <div class="col-6 TwoDate">
                                <input class="HourClockTwo" id="HourThree" value="@DateTime.Now.ToString("HH:mm")" min="08:00" max="15:24" type="time" name="HourThree">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input value="1" id="Bit" asp-for="Bit" hidden />
                    <input type="button" id="TwoDates" class="btn btn-secondary" value="Længer period" />
                    <input type="button" class="btn btn-secondary" data-dismiss="modal" value="Close" />
                    <input type="submit" id="submit" class="btn btn-primary" asp-page-handler="AbscenseRequest" value="Save changes" />
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
            $('#TwoDates').click(function() {
                $('.TwoDates').toggleClass("show");
                $('#Date').toggleClass("Hide");

                if (document.getElementById('AbsCalendar').hasAttribute("Required")) {
                    document.getElementById('Bit').setAttribute('value','2')

                    $('#AbsCalendar').prop('required',false);
                    $('.HourClock').prop('required',false);

                    $('#AbsCalendarTwo').prop('required',true);
                    $('#AbsCalendarThree').prop('required',true);
                    $('.HourClockTwo').prop('required',true);
                }
                else {
                    document.getElementById('Bit').setAttribute('value','1')

                    $('#AbsCalendar').prop('required',true);
                    $('.HourClock').prop('required',true);

                    $('#AbsCalendarTwo').prop('required',false);
                    $('#AbsCalendarThree').prop('required',false);
                    $('.HourClockTwo').prop('required',false);
                }
            });

            $('#submit').click(function() {
                if (document.getElementById('AbscenseRequest').classList.contains("show")) {

                    $('#FirstName').prop('required',false);
                    $('#LastName').prop('required',false);
                    $('#UserName').prop('required',false);
                    $('#Password').prop('required',false);
                    $('#StartDate').prop('required',false);
                    $('#EndDate').prop('required',false);

                    
                }
                else {

                    $('#FirstName').prop('required',true);
                    $('#LastName').prop('required',true);
                    $('#UserName').prop('required',true);
                    $('#Password').prop('required',true);
                    $('#StartDate').prop('required',true);
                    $('#EndDate').prop('required',true);
                }
            });

            document.getElementById('AbsCalendarTwo').onchange = function () {
                var input = document.getElementById('AbsCalendarThree');
                var otherInput = document.getElementById('AbsCalendarTwo').value;
                input.setAttribute("min", otherInput)
            }

            $('#submit').click(function () {
                if (document.getElementById('TwoDatesDiv').classList.contains("show")) {
                        var currentStartTimeValue = document.getElementById("HourTwo").value;
                        var currentEndTimeValue = document.getElementById("HourThree").value;

                        if (!currentStartTimeValue) {
                            alert('Vægle en start tid!');
                                return false;
                        }
                        else if (!currentEndTimeValue) {
                            alert('Vægle en slut tid!');
                                return false;
                        }
                        else if (currentStartTimeValue >= currentEndTimeValue || currentStartDateValue > currentEndDateValue) {
                            if(currentStartDateValue >= currentEndDateValue) {
                                alert('Slut tiden må ikke være før start tiden!');
                                return false;
                            }
                        }

                        document.getElementById('submit').style.pointerEvents = "none";
                }
            });

            $("#EndDate").change(function () {
                var startDate = document.getElementById("StartDate").value;
                var endDate = document.getElementById("EndDate").value;

                if ((Date.parse(endDate) <= Date.parse(startDate))) {
                    alert("End date should be greater than Start date");
                    document.getElementById("EndDate").value = "";
                }
            });
    </script>

</form>
